name: Deploy and Test Terraform!

on:
  push:
    branches:
      - terra

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.6

      - name: Initialize Terraform
        working-directory: terraform/
        run: terraform init

      - name: Apply Terraform
        working-directory: terraform/
        run: terraform apply -var "aws_access_key_id=${{ secrets.AWS_ACCESS_KEY }}" -var "aws_secret_access_key=${{ secrets.AWS_SECRET_KEY }}" -auto-approve
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Get Public IP
        id: get_ip
        working-directory: terraform/
        run: |
          IP=$(terraform output -raw public_ip | tr -d '\n')
          echo "IP=${IP}" >> $GITHUB_ENV

      - name: Debug Public IP
        run: echo "Public IP: ${{ env.IP }}"

      - name: Notify Telegram
        if: always()
        env:
          TELEGRAM_TOKEN: ${{ secrets.TG_TOKEN }}
          CHAT_ID: ${{ secrets.TG_CHAT_ID }}
        run: |
          STATUS="FAILED"
          if [ "${{ job.status }}" == "success" ]; then
            STATUS="SUCCESSFUL"
          fi
          curl -s -X POST "https://api.telegram.org/bot$TELEGRAM_TOKEN/sendMessage" \
            -d chat_id="$CHAT_ID" \
            -d text="Pipeline $STATUS: Deploy and test completed with result ${{ job.status }}."
